	component hps_intel_agilex_hps_0 is
		port (
			SDMMC_CMD     : inout std_logic                     := 'X';             -- SDMMC_CMD
			SDMMC_D0      : inout std_logic                     := 'X';             -- SDMMC_D0
			SDMMC_D1      : inout std_logic                     := 'X';             -- SDMMC_D1
			SDMMC_D2      : inout std_logic                     := 'X';             -- SDMMC_D2
			SDMMC_D3      : inout std_logic                     := 'X';             -- SDMMC_D3
			SDMMC_CCLK    : out   std_logic;                                        -- SDMMC_CCLK
			h2f_rst       : out   std_logic;                                        -- reset
			h2f_axi_clk   : in    std_logic                     := 'X';             -- clk
			h2f_axi_rst_n : in    std_logic                     := 'X';             -- reset_n
			h2f_AWID      : out   std_logic_vector(3 downto 0);                     -- awid
			h2f_AWADDR    : out   std_logic_vector(31 downto 0);                    -- awaddr
			h2f_AWLEN     : out   std_logic_vector(7 downto 0);                     -- awlen
			h2f_AWSIZE    : out   std_logic_vector(2 downto 0);                     -- awsize
			h2f_AWBURST   : out   std_logic_vector(1 downto 0);                     -- awburst
			h2f_AWLOCK    : out   std_logic;                                        -- awlock
			h2f_AWCACHE   : out   std_logic_vector(3 downto 0);                     -- awcache
			h2f_AWPROT    : out   std_logic_vector(2 downto 0);                     -- awprot
			h2f_AWVALID   : out   std_logic;                                        -- awvalid
			h2f_AWREADY   : in    std_logic                     := 'X';             -- awready
			h2f_WDATA     : out   std_logic_vector(63 downto 0);                    -- wdata
			h2f_WSTRB     : out   std_logic_vector(7 downto 0);                     -- wstrb
			h2f_WLAST     : out   std_logic;                                        -- wlast
			h2f_WVALID    : out   std_logic;                                        -- wvalid
			h2f_WREADY    : in    std_logic                     := 'X';             -- wready
			h2f_BID       : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- bid
			h2f_BRESP     : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- bresp
			h2f_BVALID    : in    std_logic                     := 'X';             -- bvalid
			h2f_BREADY    : out   std_logic;                                        -- bready
			h2f_ARID      : out   std_logic_vector(3 downto 0);                     -- arid
			h2f_ARADDR    : out   std_logic_vector(31 downto 0);                    -- araddr
			h2f_ARLEN     : out   std_logic_vector(7 downto 0);                     -- arlen
			h2f_ARSIZE    : out   std_logic_vector(2 downto 0);                     -- arsize
			h2f_ARBURST   : out   std_logic_vector(1 downto 0);                     -- arburst
			h2f_ARLOCK    : out   std_logic;                                        -- arlock
			h2f_ARCACHE   : out   std_logic_vector(3 downto 0);                     -- arcache
			h2f_ARPROT    : out   std_logic_vector(2 downto 0);                     -- arprot
			h2f_ARVALID   : out   std_logic;                                        -- arvalid
			h2f_ARREADY   : in    std_logic                     := 'X';             -- arready
			h2f_RID       : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- rid
			h2f_RDATA     : in    std_logic_vector(63 downto 0) := (others => 'X'); -- rdata
			h2f_RRESP     : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- rresp
			h2f_RLAST     : in    std_logic                     := 'X';             -- rlast
			h2f_RVALID    : in    std_logic                     := 'X';             -- rvalid
			h2f_RREADY    : out   std_logic                                         -- rready
		);
	end component hps_intel_agilex_hps_0;

