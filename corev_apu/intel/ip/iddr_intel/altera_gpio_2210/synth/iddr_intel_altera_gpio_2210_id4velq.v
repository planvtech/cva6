// iddr_intel_altera_gpio_2210_id4velq.v

// This file was auto-generated from altera_gpio_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 24.1 115

`timescale 1 ps / 1 ps
module iddr_intel_altera_gpio_2210_id4velq (
		input  wire       ck,     //     ck.export, In input and output paths, this clock feeds a packed register or DDIO. In bidirectional mode, this clock is the unique clock for the input and output paths if you turn off the Separate input/output Clocks parameter.
		output wire [1:0] dout,   //   dout.export, Data output to the FPGA core in input or bidirectional mode, DATA_SIZE depends on the register mode: Bypass or simple register - DATA_SIZE = SIZE DDIO - DATA_SIZE = 2 x SIZE
		input  wire [0:0] pad_in  // pad_in.export, Input signal from the pad.
	);

	altera_gpio #(
		.SIZE                (1),
		.PIN_TYPE            ("input"),
		.REGISTER_MODE       ("ddr"),
		.HALF_RATE           ("false"),
		.DDIO_WITH_DELAY     ("false"),
		.SEPARATE_I_O_CLOCKS ("false"),
		.BUFFER_TYPE         ("single-ended"),
		.PSEUDO_DIFF         ("false"),
		.ARESET_MODE         ("none"),
		.SRESET_MODE         ("none"),
		.OPEN_DRAIN          ("false"),
		.BUS_HOLD            ("false"),
		.ENABLE_OE           ("false"),
		.ENABLE_CKE          ("false"),
		.ENABLE_TERM         ("false")
	) core (
		.ck                 (ck),     //   input,  width = 1,     ck.export
		.dout               (dout),   //  output,  width = 2,   dout.export
		.pad_in             (pad_in), //   input,  width = 1, pad_in.export
		.cke                (1'b1),   // (terminated),                    
		.ck_fr_in           (1'b0),   // (terminated),                    
		.ck_fr_out          (1'b0),   // (terminated),                    
		.ck_in              (1'b0),   // (terminated),                    
		.ck_out             (1'b0),   // (terminated),                    
		.ck_fr              (1'b0),   // (terminated),                    
		.ck_hr_in           (1'b0),   // (terminated),                    
		.ck_hr_out          (1'b0),   // (terminated),                    
		.ck_hr              (1'b0),   // (terminated),                    
		.din                (2'b00),  // (terminated),                    
		.oe                 (1'b0),   // (terminated),                    
		.pad_io             (),       // (terminated),                    
		.pad_io_b           (),       // (terminated),                    
		.pad_in_b           (1'b0),   // (terminated),                    
		.pad_out            (),       // (terminated),                    
		.pad_out_b          (),       // (terminated),                    
		.terminationcontrol (1'b0),   // (terminated),                    
		.aclr               (1'b0),   // (terminated),                    
		.aset               (1'b0),   // (terminated),                    
		.sclr               (1'b0),   // (terminated),                    
		.sset               (1'b0)    // (terminated),                    
	);

endmodule
